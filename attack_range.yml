---
- name: Setup Splunk Attack Range
  hosts: attack_range
  become: yes
  gather_facts: false
  vars:
    terraform_version: "1.9.8"
    terraform_zip: "/home/ubuntu/terraform.zip"
    awscli_zip: "/home/ubuntu/awscliv2.zip"
    poetry_bin: "/home/ubuntu/.local/bin/poetry"

    attack_range_provider: "{{ lookup('env','ATTACK_RANGE_PROVIDER') | default('aws') }}"
    attack_range_region: "{{ lookup('env','ATTACK_RANGE_REGION') | default('ap-southeast-2') }}"
    attack_range_password: "{{ lookup('env','ATTACK_RANGE_PASSWORD') | default('changeme') }}"
    attack_range_instance_type: "{{ lookup('env','ATTACK_RANGE_INSTANCE_TYPE') | default('t2.medium') }}"
    attack_range_key_name: "{{ lookup('env','ATTACK_RANGE_KEY_NAME') | default('attack-range-key-pair') }}"
    attack_range_private_key: "{{ lookup('env','ATTACK_RANGE_PRIVATE_KEY') | default('/home/ubuntu/.ssh/Admin123.pem') }}"

  pre_tasks:
    - name: Wait for SSH to become available
      ansible.builtin.wait_for_connection:
        timeout: 300

    - name: Test SSH connectivity
      ansible.builtin.ping:

  tasks:
    - name: Update apt cache and upgrade
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist

    - name: Install base packages
      ansible.builtin.apt:
        name:
          - python3.10
          - python3.10-venv
          - python3-pip
          - git
          - unzip
          - curl
          - zip
          - build-essential
          - libffi-dev
          - python3-dev
        state: present

    - name: Upgrade pip, setuptools, and wheel
      ansible.builtin.command: python3 -m pip install --upgrade pip setuptools wheel

    - name: Download Terraform
      ansible.builtin.get_url:
        url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
        dest: "{{ terraform_zip }}"

    - name: Unpack Terraform
      ansible.builtin.unarchive:
        src: "{{ terraform_zip }}"
        dest: /usr/local/bin/
        remote_src: yes
      args:
        creates: /usr/local/bin/terraform

    - name: Clone attack_range repo
      ansible.builtin.git:
        repo: https://github.com/splunk/attack_range.git
        dest: /home/ubuntu/attack_range
        version: master
        force: yes
      become_user: ubuntu

    - name: Install AWS CLI
      ansible.builtin.shell: |
        curl -s https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o {{ awscli_zip }}
        unzip -o {{ awscli_zip }} -d /home/ubuntu/
        sudo /home/ubuntu/aws/install --update
      args:
        creates: /usr/local/bin/aws

    - name: Install Poetry
      ansible.builtin.shell: |
        curl -sSL https://install.python-poetry.org | python3 -
      args:
        creates: "{{ poetry_bin }}"
      become_user: ubuntu

    - name: Ensure python-terraform and hcl2 installed
      ansible.builtin.command: python3 -m pip install python-terraform python-hcl2
      changed_when: false

    - name: Install requirements.txt
      ansible.builtin.command: python3 -m pip install -r /home/ubuntu/attack_range/requirements.txt
      become_user: ubuntu

    - name: Copy attack_range.conf
      ansible.builtin.copy:
        src: /home/ubuntu/attack_range/attack_range.conf.template
        dest: /home/ubuntu/attack_range/attack_range.conf
        owner: ubuntu
        group: ubuntu
        mode: '0644'
      remote_src: yes

    - name: Run terraform init
      ansible.builtin.command:
        cmd: /usr/local/bin/terraform init -input=false
        chdir: /home/ubuntu/attack_range/terraform/aws

    - name: Build attack range
      ansible.builtin.command:
        argv:
          - python3
          - attack_range.py
          - -c
          - attack_range.conf
          - build
        chdir: /home/ubuntu/attack_range
      become_user: ubuntu
